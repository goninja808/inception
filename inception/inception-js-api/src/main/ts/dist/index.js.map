{
  "version": 3,
  "sources": ["../src/model/Layer.ts", "../src/model/AnnotatedText.ts", "../src/model/Relation.ts", "../src/model/Span.ts", "../src/model/AnnotationMarker.ts", "../src/model/TextMarker.ts", "../src/model/Argument.ts", "../src/model/compact_v2/CompactAnnotationMarker.ts", "../src/model/compact_v2/CompactLayer.ts", "../src/model/compact_v2/CompactArgument.ts", "../src/model/compact_v2/CompactRelation.ts", "../src/model/compact_v2/CompactSpan.ts", "../src/model/compact_v2/CompactTextMarker.ts", "../src/model/compact_v2/CompactAnnotatedText.ts"],
  "sourcesContent": ["/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Layer {\n  id: number\n  name: string\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Offsets } from './Offsets'\nimport { VID } from './VID'\nimport { AnnotationMarker } from './AnnotationMarker'\nimport { Relation } from './Relation'\nimport { Span } from './Span'\nimport { TextMarker } from './TextMarker'\nimport { Layer } from './Layer'\n\nexport class AnnotatedText {\n  window: Offsets\n  text?: string\n  layers: Map<number, Layer> = new Map<number, Layer>()\n  relations: Array<Relation>\n  spans: Array<Span>\n  annotationMarkers: Map<VID, AnnotationMarker[]>\n  textMarkers: TextMarker[]\n\n  __getOrCreateLayer (id: number): Layer {\n    let layer = this.layers.get(id)\n    if (!layer) {\n      layer = new Layer()\n      layer.id = id\n      this.layers.set(id, layer)\n    }\n    return layer\n  }\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Annotation, VID } from '.'\nimport { Argument } from './Argument'\nimport { Layer } from './Layer'\n\nexport class Relation implements Annotation {\n  layer: Layer\n  vid: VID\n  color?: string\n  label?: string\n  arguments: Array<Argument>\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Annotation, Offsets, VID } from '.'\nimport { Layer } from './Layer'\n\nexport type ClippingStatus = undefined | 's' | 'e' | 'se'\n\nexport class Span implements Annotation {\n  layer: Layer\n  vid: VID\n  offsets: Array<Offsets>\n  color?: string\n  label?: string\n\n  /**\n   * Clipping status (optional)\n   */\n  clippingFlags?: ClippingStatus\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VID } from '.'\n\nexport class AnnotationMarker {\n  type: string\n  vid: Array<VID>\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Offsets } from './Offsets'\n\nexport class TextMarker {\n  type: string\n  offsets: Array<Offsets>\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VID } from '.'\n\n/**\n * Represents the endpoint of a relation.\n */\nexport class Argument {\n  target: VID\n  label?: string\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VID, AnnotationMarker } from '..'\n\nexport type CompactAnnotationMarker = [\n  type: string,\n  vid: Array<VID>\n]\n\nexport function unpackCompactAnnotationMarker (raw: CompactAnnotationMarker): AnnotationMarker {\n  const cooked = new AnnotationMarker()\n  cooked.type = raw[0]\n  cooked.vid = raw[1]\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Layer } from '../Layer'\n\nexport type CompactLayer = {\n  id: number,\n  name: string\n}\n\nexport function unpackCompactLayer (raw: CompactLayer): Layer {\n  const cooked = new Layer()\n  cooked.id = raw.id\n  cooked.name = raw.name\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VID, Argument } from '..'\n\n/**\n * Represents the endpoint of an arc.\n */\nexport type CompactArgument = [\n  target: VID,\n  label?: string\n]\n\nexport function unpackCompactArgument (raw: CompactArgument): Argument {\n  const cooked = new Argument()\n  cooked.target = raw[0]\n  cooked.label = raw[1]\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VID, Relation, AnnotatedText } from '..'\nimport { CompactArgument, unpackCompactArgument } from './CompactArgument'\nimport { CompactRelationAttributes } from './CompactRelationAttributes'\n\nexport type CompactRelation = [\n  layerId: number,\n  vid: VID,\n  arguments: Array<CompactArgument>,\n  attributes?: CompactRelationAttributes\n]\n\nexport function unpackCompactRelation (doc: AnnotatedText, raw: CompactRelation): Relation {\n  const cooked = new Relation()\n  cooked.layer = doc.__getOrCreateLayer(raw[0])\n  cooked.vid = raw[1]\n  cooked.arguments = raw[2].map(unpackCompactArgument)\n  cooked.color = raw[3]?.c\n  cooked.label = raw[3]?.l\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Offsets, Span, VID, AnnotatedText } from '..'\nimport { CompactSpanAttributes } from './CompactSpanAttributes'\n\nexport type CompactSpan = [\n  layerId: number,\n  vid: VID,\n  offsets: Array<Offsets>,\n  attributes?: CompactSpanAttributes\n]\n\nexport function unpackCompactSpan (doc: AnnotatedText, raw: CompactSpan): Span {\n  const cooked = new Span()\n  cooked.layer = doc.__getOrCreateLayer(raw[0])\n  cooked.vid = raw[1]\n  cooked.offsets = raw[2]\n  cooked.color = raw[3]?.c\n  cooked.label = raw[3]?.l\n  cooked.clippingFlags = raw[3]?.cl\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TextMarker, Offsets } from '..'\n\nexport type CompactTextMarker = [\n  type: string,\n  offsets: Array<Offsets>\n]\n\nexport function unpackCompactTextMarker (raw: CompactTextMarker): TextMarker {\n  const cooked = new TextMarker()\n  cooked.type = raw[0]\n  cooked.offsets = raw[1]\n  return cooked\n}\n", "/*\n * Licensed to the Technische Universit\u00E4t Darmstadt under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The Technische Universit\u00E4t Darmstadt\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AnnotatedText, Offsets, VID } from '..'\nimport { CompactAnnotationMarker, unpackCompactAnnotationMarker } from './CompactAnnotationMarker'\nimport { CompactLayer, unpackCompactLayer } from './CompactLayer'\nimport { CompactRelation, unpackCompactRelation } from './CompactRelation'\nimport { CompactSpan, unpackCompactSpan } from './CompactSpan'\nimport { CompactTextMarker, unpackCompactTextMarker } from './CompactTextMarker'\n\nexport interface CompactAnnotatedText {\n  text?: string\n  layers?: Array<CompactLayer>\n  window: Offsets\n  relations?: Array<CompactRelation>\n  spans?: Array<CompactSpan>\n  annotationMarkers?: Array<CompactAnnotationMarker>\n  textMarkers?: Array<CompactTextMarker>\n}\n\nexport function unpackCompactAnnotatedText (raw: CompactAnnotatedText): AnnotatedText {\n  const cooked = new AnnotatedText()\n  cooked.text = raw.text\n  cooked.window = raw.window\n  raw.layers?.forEach(layer => cooked.layers.set(layer.id, unpackCompactLayer(layer)))\n  cooked.spans = raw.spans?.map(span => unpackCompactSpan(cooked, span)) || []\n  cooked.relations = raw.relations?.map(rel => unpackCompactRelation(cooked, rel)) || []\n  const annotationMarkers = raw.annotationMarkers?.map(unpackCompactAnnotationMarker)\n  cooked.annotationMarkers = makeMarkerMap(annotationMarkers)\n  cooked.textMarkers = raw.textMarkers?.map(unpackCompactTextMarker) || []\n  return cooked\n}\n\n/**\n * Converts a list of {@link CompactAnnotationMarker}s to an easily accessible map using the {@link VID}\n * as key and the set of markers on that annotation as values.\n *\n * @param markerList a list of {@link CompactAnnotationMarker}s\n * @returns the map\n */\nexport function makeMarkerMap<T> (markerList: T[] | undefined): Map<VID, Array<T>> {\n  const markerMap = new Map<VID, Array<T>>()\n  if (markerList) {\n    markerList.forEach(marker => {\n      marker[1].forEach(vid => {\n        let ms = markerMap.get(vid)\n        if (!ms) {\n          ms = []\n          markerMap.set(vid, ms)\n        }\n        ms.push(marker)\n      })\n    })\n  }\n  return markerMap\n}\n"],
  "mappings": "MAiBO,IAAMA,EAAN,KAAY,CAGnB,ECKO,IAAMC,EAAN,KAAoB,CAApB,cAGL,YAA6B,IAAI,IAMjC,mBAAoBC,EAAmB,CACrC,IAAIC,EAAQ,KAAK,OAAO,IAAID,CAAE,EAC9B,OAAKC,IACHA,EAAQ,IAAIC,EACZD,EAAM,GAAKD,EACX,KAAK,OAAO,IAAIA,EAAIC,CAAK,GAEpBA,CACT,CACF,ECtBO,IAAME,EAAN,KAAqC,CAM5C,ECLO,IAAMC,EAAN,KAAiC,CAWxC,ECdO,IAAMC,EAAN,KAAuB,CAG9B,ECHO,IAAMC,EAAN,KAAiB,CAGxB,ECAO,IAAMC,EAAN,KAAe,CAGtB,ECDO,SAASC,EAA+BC,EAAgD,CAC7F,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,KAAOD,EAAI,GAClBC,EAAO,IAAMD,EAAI,GACVC,CACT,CCJO,SAASE,EAAoBC,EAA0B,CAC5D,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,GAAKD,EAAI,GAChBC,EAAO,KAAOD,EAAI,KACXC,CACT,CCHO,SAASE,EAAuBC,EAAgC,CACrE,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,OAASD,EAAI,GACpBC,EAAO,MAAQD,EAAI,GACZC,CACT,CCJO,SAASE,EAAuBC,EAAoBC,EAAgC,CACzF,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,MAAQF,EAAI,mBAAmBC,EAAI,EAAE,EAC5CC,EAAO,IAAMD,EAAI,GACjBC,EAAO,UAAYD,EAAI,GAAG,IAAIG,CAAqB,EACnDF,EAAO,MAAQD,EAAI,IAAI,EACvBC,EAAO,MAAQD,EAAI,IAAI,EAChBC,CACT,CCTO,SAASG,EAAmBC,EAAoBC,EAAwB,CAC7E,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,MAAQF,EAAI,mBAAmBC,EAAI,EAAE,EAC5CC,EAAO,IAAMD,EAAI,GACjBC,EAAO,QAAUD,EAAI,GACrBC,EAAO,MAAQD,EAAI,IAAI,EACvBC,EAAO,MAAQD,EAAI,IAAI,EACvBC,EAAO,cAAgBD,EAAI,IAAI,GACxBC,CACT,CCZO,SAASE,EAAyBC,EAAoC,CAC3E,IAAMC,EAAS,IAAIC,EACnB,OAAAD,EAAO,KAAOD,EAAI,GAClBC,EAAO,QAAUD,EAAI,GACdC,CACT,CCKO,SAASE,EAA4BC,EAA0C,CACpF,IAAMC,EAAS,IAAIC,EACnBD,EAAO,KAAOD,EAAI,KAClBC,EAAO,OAASD,EAAI,OACpBA,EAAI,QAAQ,QAAQG,GAASF,EAAO,OAAO,IAAIE,EAAM,GAAIC,EAAmBD,CAAK,CAAC,CAAC,EACnFF,EAAO,MAAQD,EAAI,OAAO,IAAIK,GAAQC,EAAkBL,EAAQI,CAAI,CAAC,GAAK,CAAC,EAC3EJ,EAAO,UAAYD,EAAI,WAAW,IAAIO,GAAOC,EAAsBP,EAAQM,CAAG,CAAC,GAAK,CAAC,EACrF,IAAME,EAAoBT,EAAI,mBAAmB,IAAIU,CAA6B,EAClF,OAAAT,EAAO,kBAAoBU,EAAcF,CAAiB,EAC1DR,EAAO,YAAcD,EAAI,aAAa,IAAIY,CAAuB,GAAK,CAAC,EAChEX,CACT,CASO,SAASU,EAAkBE,EAAiD,CACjF,IAAMC,EAAY,IAAI,IACtB,OAAID,GACFA,EAAW,QAAQE,GAAU,CAC3BA,EAAO,GAAG,QAAQC,GAAO,CACvB,IAAIC,EAAKH,EAAU,IAAIE,CAAG,EACrBC,IACHA,EAAK,CAAC,EACNH,EAAU,IAAIE,EAAKC,CAAE,GAEvBA,EAAG,KAAKF,CAAM,CAChB,CAAC,CACH,CAAC,EAEID,CACT",
  "names": ["Layer", "AnnotatedText", "id", "layer", "Layer", "Relation", "Span", "AnnotationMarker", "TextMarker", "Argument", "unpackCompactAnnotationMarker", "raw", "cooked", "AnnotationMarker", "unpackCompactLayer", "raw", "cooked", "Layer", "unpackCompactArgument", "raw", "cooked", "Argument", "unpackCompactRelation", "doc", "raw", "cooked", "Relation", "unpackCompactArgument", "unpackCompactSpan", "doc", "raw", "cooked", "Span", "unpackCompactTextMarker", "raw", "cooked", "TextMarker", "unpackCompactAnnotatedText", "raw", "cooked", "AnnotatedText", "layer", "unpackCompactLayer", "span", "unpackCompactSpan", "rel", "unpackCompactRelation", "annotationMarkers", "unpackCompactAnnotationMarker", "makeMarkerMap", "unpackCompactTextMarker", "markerList", "markerMap", "marker", "vid", "ms"]
}
